@page "/city"
@using WebAPI.Client.Models;
@inject HttpClient Http

<h3>AddCity</h3>

<RadzenRow Gap="2rem" RowGap="2rem" class="rz-m-0 rz-m-md-12">
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenCard>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Default TextBox</RadzenText>
            <RadzenTextBox Style="width: 100%" aria-label="City Name" @bind-Value="weatherData.cityName" />
        </RadzenCard>
    </RadzenColumn>
     <RadzenColumn Size="12" SizeMD="3">
        <RadzenCard>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Default TextBox</RadzenText>
            <RadzenNumeric Style="width: 100%" aria-label="lattitude" @bind-Value="weatherData.latitude" />
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="3">
        <RadzenCard>
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Default TextBox</RadzenText>
            <RadzenNumeric Style="width: 100%" aria-label="longitude" @bind-Value="weatherData.longitude" />
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Size="12" SizeMD="1" class="rz-mt-8 rz-mx-3">
        <RadzenButton Text="Save" ButtonStyle="ButtonStyle.Primary" Click="SaveWeatherData" />
    </RadzenColumn>

    <RadzenColumn Size="12" SizeMD="1" class="rz-mt-8 rz-mx-3">
        <RadzenButton Text="Cancel" ButtonStyle="ButtonStyle.Primary" Click="ClearInputs" />
    </RadzenColumn>

</RadzenRow>

@code{
     private  WeatherCity weatherData = new WeatherCity();
    private async Task SaveWeatherData()
    {
        try
        {
            Console.WriteLine($"Saving city: {weatherData.cityName}, Lat: {weatherData.latitude}, Lon: {weatherData.longitude}");
            var response = await Http.PostAsJsonAsync("api/WeatherCities", weatherData);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Weather data saved successfully!");
                weatherData = new WeatherCity();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error saving weather data: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception occurred: {ex.Message}");
        }
    }
    private void ClearInputs()
    {
        weatherData = new WeatherCity();
    }
}
